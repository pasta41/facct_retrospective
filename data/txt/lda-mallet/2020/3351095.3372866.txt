Recommendations and User Agency The Reachability of Collaboratively-Filtered Information Recommender systems often rely on models which are trained to maximize accuracy in predicting user preferences When the systems are deployed these models determine the availability of content and information to different users The gap between these objectives gives rise to a potential for unintended consequences contributing to phenomena such as filter bubbles and polarization In this work we consider directly the information availability problem through the lens of user recourse Using ideas of reachability we propose a computationally efficient audit for top-N linear recommender models Furthermore we describe the relationship between model complexity and the effort necessary for users to exert control over their recommendations We use this insight to provide a novel perspective on the user cold-start problem Finally we demonstrate these concepts with an empirical investigation of a state-of-the-art model trained on a widely used movie ratings dataset INTRODUCTION Recommendation systems influence the way information is presented to individuals for a wide variety of domains including music videos dating shopping and advertising On one hand the near-ubiquitous practice of filtering content by predicted preferences makes the digital information overload possible for individuals to navigate By exploiting the patterns in ratings or consumption across users preference predictions are useful in surfacing relevant and interesting content On the other hand this personalized curation is a potential mechanism for social segmentation and polarization The exploited patterns across users may in fact encode undesirable biases which become self-reinforcing when used in feedback to make recommendations Recent empirical work shows that personalization on the Internet has a limited effect on political polarization and in fact it can increase the diversity of content consumed by individuals However these observations follow by comparison to non-personalized baselines of cable news or well known publishers In a digital world where all content is algorithmically sorted by default how do we articulate the tradeoffs involved In the past year YouTube has come under fire for promoting disturbing childrens content and working as an engine of radicalization This comes a push on algorithm development towards reaching billion hours of watchtime per day over of views now come from the recommended videos The Youtube controversy is an illustrative example of potential pitfalls when putting large scale machine learning-based systems in feedback with people and highlights the importance of creating analytical tools to anticipate and prevent undesirable behavior Such tools should seek to quantify the degree to which a recommender system will meet the information needs of its users or of society as a whole where these information needs must be carefully defined to include notions like relevance coverage and diversity An important approach involves the empirical evaluation of these metrics by simulating recommendations made by models once they are trained In this work we develop a complementary approach which differs in two major ways First we directly analyze the predictive model making it possible to understand underlying mechanisms Second our evaluation considers a range of possible user behaviors rather than a static snapshot Drawing conclusions about the likely effects of recommendations involves treating humans as a component within the system and the validity of these conclusions hinges on modeling human behavior We propose an alternative evaluation that favors the agency of individuals over the limited perspective offered by behavioral predictions Our main focus is on questions of possibility to what extent can someone be pigeon-holed by their viewing history What videos may they never see even after a drastic change in viewing behavior And how might a recommender system encode biases in a way that effectively limits the available library of content This perspective brings user agency into the center prioritizing the the ability for models to be as adaptable as they are accurate able to accommodate arbitrary changes in the interests of individuals Studies find positive effects of allowing users to exert greater control in recommendation systems While there are many system-level or post-hoc approaches to incorporating user feedback we focus directly on the machine learning model that powers recommendations Contributions In this paper we propose a definition of user recourse and item availability for recommender systems This perspective extends the notion of recourse proposed by Ustun et al to multiclass classification settings and specializes to concerns most relevant for information retrieval systems We focus our analysis on top-N recommendations made using linear predictions a broad class including matrix factorization models In Section we show how properties of latent user and item representations interact to limit or ensure recourse and availability This yields a novel perspective on user cold-start problems where a user with no rating history is introduced to a system In Section we propose a computationally efficient model audit Finally in Section we demonstrate how the proposed analysis can be used as a tool to interpret how learned models will interact with users when deployed Related Work Recommendation models that incorporate user feedback for online updates have been considered from several different angles The computational perspective focuses on ensuring that model updates are efficient and fast The statistical perspective articulates the sampling bias induced by recommendation while practical perspectives identify ways to discard user interactions that are not informative for model updates Another body of work focuses on the learning problem seeking to improve the predictive accuracy of models by exploiting the sequential nature of information This includes strategies like Thompson sampling upper confidence bound approximations for contextual bandits and reinforcement learning This body of work and indeed much work on recommender systems focuses on the accuracy of the model This encodes an implicit assumption that the primary information needs of users or society are described by predictive performance Alternative measures proposed in the literature include concepts related to diversity or novelty of recommendations Directly incorporating these objectives into a recommender system might include further predictive models of users eg to determine whether they are challenge averse or diversity seeking Further alternative criteria arise from concerns of fairness and bias and recent work has sought to empirically quantify parity metrics on recommendations In this work we focus more directly on agency rather than predictive models or observations Most similar to our work is a handful of papers focusing on decision systems through the lens of the agency of individuals We are most directly inspired by the work of Ustun et al on actionable recourse for binary decisions where users seek to change negative classification through modifications to their features This work has connections to concepts in explainability and transparency via the idea of counterfactual explanations which provide statements of the form if a user had features X then they would have been assigned alternate outcome Y Work in strategic manipulation studies nearly the same problem with the goal of creating a decision system that is robust to malicious changes in features Applying these ideas to recommender systems is complex because while they can be viewed as classifiers or decision systems there are as many outcomes as pieces of content Computing precise action sets for recourse for every user-item pair is unrealistic we dont expect a user to even become aware of the majority of items Instead we consider the reachability of items by users drawing philosophically from the fields of formal verification and dynamical system analysis PROBLEM SETTING A recommender system considers a population of users and a collection of items We denote a rating by user u of item i as R R This value can be either explicit eg star-ratings for movies or implicit eg number of listens Let n denote the number of users in the system denote the number of items Though these are both generally quite large the number of observed ratings is much smaller Let denote the set of items whose ratings by user u have been observed We collect these observed ratings into a sparse vector term whose values are defined at and elsewhere Then a system makes recommendations with a policy which returns a subset of items subset as N which is a parameter of the system We are now ready to define the reachability sub-problem for a recommender system We say that a user u can reach item i if there is some allowable modification to their rating history that causes item i to be recommended The reachability problem for user u and item i is defined as minimize term cost subject to i r where the modification set m R describes how users are allowed to modify their rating history and cost describes how difficult or unlikely it is for a user to make this change This notion of difficulty might relate discretely to the total number of changes or to the amount that these changes deviate from the existing preferences of the user By defining the cost with respect to user behavior the reachability problem encodes both the possibilities of recommendations through its feasibility as well as the relative likelihood of different outcomes as modeled by the cost The ways that users can change their rating histories described by the modification set m depends on the design of user input to the system We consider a single round of user reactions to N recommendations and focus on two models of user behavior changes to existing ratings which we will refer to as history edits and reaction to a batch of recommended items which we will refer to as reactions In the first case consists of all possible ratings on the support In the second it consists of all new ratings on the support combined with the existing rating history The reachability problem defines a quantity for each user and item in the system To use this problem as a metric for evaluating recommender systems we consider both user- and item-centric perspectives For users this is a notion of recourse Definition The amount of recourse available to a user u is defined as the percentage of unseen items that are reachable ie for which is feasible The difficulty of recourse is defined by the average value of the recourse problem over all reachable items i On the other hand the item-centric perspective centers around notions of availability and representation randomized policies which sample from a subset of items based on their ratings It is only necessary to define reachability with respect to probabilities of seeing an item and then to carry through terms related to the sampling distribution Definition The availability of items in a recommender system is defined as the percentage of items that are reachable by some user These definitions are important from the perspective of guaranteeing fair representation of content within recommender systems This is significant for users for example to what extent have their previously expressed preferences limited the content that is currently reachable It is equally important to content creators for whom the ability to build an audience depends on the availability of their content in the recommender system overall In what follows we turn our attention to specific classes of preference models for which the reachability problem is analytically tractable However we note that estimation via sampling can provide lower bounds on availability and recourse even for black-box models and further explore this observation in Section We keep the main focus on analysis rather than sampling because it allows us to crisply distinguish between unlikely and impossible Linear Preference Models While many different approaches to recommender systems exist ranging from classical neighborhood models to more recent deep neural networks we focus our attention on linear preference models These are models which predict user rating as the dot product between user and item vectors plus bias terms pu bi We will refer to and pu as item and user representations This broad class includes both item- and user-based neighborhood models sparse approaches like SLIM and matrix factorization which differ only in how the user and item representations are determined from the rating data For ease of exposition we drop the bias terms for the body of the paper and focus on matrix factorization deferring our general results and explanation to Appendix A Matrix factorization is a classical approach to recommendation which become prominent during the Netflix Prize competition It can be specialized to different assumptions about data and user behavior including constrained approaches like non-negative matrix factorization or augmentations like inclusion of implicit information about preferences and additional features Due to its power and simplicity the matrix factorization approach is still widely used indeed it has recently been shown to be capable of attaining state-of-the-art results In this setting the item and user representations are referred to as factors lying in a latent space of specified dimension d which controls the complexity of the model The factors can be collected into matrices P and Q Fitting the model most commonly entails solving the nonconvex minimization minimize u i pu Q where is a regularizer The predicted ratings of unseen items are used to make recommendations Specifically we consider top-N recommenders which return i all but at most N unseen items For linear preference models the condition reduces to pu pu pu Thus for fixed item vectors a users recommendations are determined by their representation along with a list of unseen items In a slight abuse of notation we will use this fact to write the recommender policy instead of r When users ratings change their representations change as well While there are a variety of possible strategies for performing online updates we focus on the least squares approach where pu argmin p p p This is similar to continuing an alternating least-squares ALS minimization of a common strategy Because we analyze a single round of recommendations we do not consider a simultaneous updates to the item representations in In what follows we focus on the canonical case of regularization on user and item factors with x x this the user factor calculation is given by pu which is linear in the rating vector In Appendix A we show that several other linear preference models have similar user updates RECOURSE AND AVAILABILITY We begin by reformulating the reachability problem to the case of recommendations made by matrix factorization models the general reformulation for linear models is presented in Appendix A We focus this initial exposition on the simplifying case that N and make direct connections between between model factors and the recourse and availability provided by the recommender system First we consider what needs to be true for an item i to be recommended For for top- the constraint i is equivalent to requiring that p where we define Gi to be am d matrix with rows given by for This is a linear constraint on the user factor p and the set of user factors which satisfy this constraint make up an open convex polytopic cone We refer to this set as the item-region for item i since any user whose latent representation falls within this region will be recommended item i The top- regions partition the latent space as illustrated by Figure for a toy example with latent dimension d If item factors define regions within the latent space user factors are points that may move between regions The constraints on user actions are described by the modification set m We will distinguish between mutable and immutable ratings of items within a rating vector Let denote the set of items with immutable ratings and let r R denote the corresponding ratings Then let denote the set of items with mutable ratings In what follows we will write the full set of observed ratings Then the modification set is all rating vectors r R with fixed immutable ratings r mutable ratings a for some value a R unseen items with no rating a Items in Latent Space b Availability of Items to a User Figure An example of item factors indicted by colored points in d In a the top- regions are indicated by shaded colors The teal item is unavailable and though the yellow item is reachable it is not aligned-reachable In b the availability of items for a user who has seen the blue and the green items now in grey with the blue items rating fixed The black line indicates how the users representation can change depending on their rating of the green item The red region indicates the constraining effect of requiring bounded and integer-valued ratings which affect the reachability of the yellow region The variable a is the decision variable in the reachability problem Then a users latent factor can change as p r a v Ba where we define B v r It is thus clear that this latent factor lies in an affine subspace This space is anchored at v by the immutable ratings while the mutable ratings determine the directions of possible movement This idea is illustrated in Figure b which further demonstrates the limitations due to bounded or discrete ratings as encoded in the rating set R We are now able to specialize reachability problem for matrix factorization models minimize aR cost a subject to Gi v Ba If the cost is a convex function and R is a convex set this is a convex optimization problem which can be solved efficiently If R is a discrete set or if the cost function incorporates nonconvex phenomena like sparsity then this problem can be formulated as a mixed-integer program MIP Despite bad worst-case complexity MIP can generally be solved quickly with modern software Item Availability Beyond defining the reachability problem we seek to derive properties of recommender systems based on their underlying preference models We begin by considering the feasibility of with respect to its linear inequality constraints For now we focus on the item regions ignoring the effects of user history anchor point v and control matrix B In the following result we consider the convex hull of unseen item factors which is the the smallest convex set that contains the item factors This can be formally written as and Furthermore we will consider vertices of the convex hull which are item factors that are not contained in the convex hull of the other factors ie Result In a top- recommender system the available items are those whose factors are vertices on the convex hull of all item factors As a result the availability of items in a top- recommender system is determined by the way the item factors are distributed in space it is simply the percentage of item factors that are vertices of their convex hull The proof is provided in Appendix A along with proofs of all results to follow We can further understand the effect of limited user movement in the case that ratings are real-valued ie R R In this case we consider both the control matrix B and the anchor point v For a fixed i this anchor point determines the set of items necessary for comparison v v ie those that are more similar to the anchor point than item i is We will refer to these items as the anchor-similar items Furthermore we consider multiplication of item factors by the transpose of the control matrix the multiplied factors Result In a top- recommender system a user can reach any item i whose multiplied factor is a vertex of the convex hull of all unseen anchor-similar multiplied item factors Furthermore if the factors of the items with mutable ratings are full rank has rank equal to the latent dimension of the model d then item availability implies user recourse The second statement in this result means that for a model with item availability having as many mutable ratings as latent dimensions is sufficient for ensuring that users have full recourse so long as the associated item factors are linearly independent This observation highlights that increased model complexity calls for more comprehensive user controls to maintain the same level of recourse Of course this conclusion follows only from considering the possibilities of user action to consider a notion of likelihood for various outcomes we need to consider the cost Bound on Difficulty of Recourse We now propose a simple model for the cost of user actions and use this to show a bound on the difficulty of recourse for users The cost of user actions can be modeled as a penalty on change from existing ratings For items whose ratings have not already been observed we penalize instead the change from predicted ratings For simplicity we will represent this penalty as the norm of the difference For history edits all mutable items have been observed so we simply have cost hist r r Additionally all existing ratings are mutable so mutable set and immutable set For reactions the ratings for the new recommended items have not been observed so r Additionally the rating history is immutable so while the mutable ratings are the recommendations with We note briefly that our choice of handling the cost of unobserved ratings as change from predicted ratings assumes a level of model validity While it does allow us to avoid any external behavioral modeling it represents a simple case that perhaps overemphasizes the role of the model Exploring alternative cost functions is important for future work Under this model we provide an upper bound on the difficulty of recourse This result holds for the case that ratings are real-valued ie R R and that the reachable items satisfy an alignment condition defined in of Appendix A Result Let pu indicate the users latent factor as in before any actions are taken or the next set of recommendations are added to the user history Then both in the case of full history edits and reactions difficulty of recourse for user u B i pu where is the set of reachable items This bound depends how far item factors are from the initial latent representation of the user When latent representations are close together recourse is easier or more likely an intuitive relationship This quantity will be large in situations where a user is in an isolated niche far from most of the items in latent space The bound also depends on the conditioning of the user control matrix B which is related to the similarity between mutable items the right hand side of the bound will be larger for sets of mutable items that are more similar to each other The proof of this result hinges on showing the existence of a specific feasible point to the optimization problem in In the Section we will further explore this idea of feasibility to develop lower bounds on availability and recourse when N First we described how the presented results can be used to evaluate solutions to the user cold-start problem User Cold-Start The amount and difficulty of recourse for a user yields a novel perspective on how to incorporate new users into a recommender system The user cold-start problem is the challenge of selecting items to show a user who enters a system with no rating history from which to predict their preferences This is a major issue with collaboratively filtered recommendations and systems often rely on incorporating extraneous information These strategies focus on presenting items which are most likely to be rated highly or to be most informative about user preferences The idea of recourse offers an alternative point of view Rather than evaluating a potential onboarding set only for its contribution to model accuracy we can choose a set which additionally ensures some amount of recourse Looking to Result we can evaluate an onboarding set by the geometry of the multiplied factors in latent space In the case of onboarding v and B so the recourse evaluation involves considering the vertices of the convex hull of the columns of the matrix An additional perspective is offered by considering the difficulty of recourse In this case we focus on B If we consider an norm then it reduces to B max i i where are the nonzero singular values of Minimizing this quantity is hard though the hardness of selecting informative item sets is unsurprising as it has been discussed in related settings Due to their computational challenges we primarily propose that these metrics be used to distinguish between candidate onboarding sets based on the ways these sets provide user control We leave to future work the task of generating candidate sets based on these recourse properties SUFFICIENT CONDITIONS FOR TOP-N In the previous section we developed a characterization of reachability for top- recommender systems However most real world applications involve serving several items at once Furthermore using N can approximate the availability of items to a user over time as they see more items and increase the size of the set which is excluded from the selection In this section we focus on sufficient conditions to develop a computationally efficient model audit that provides lower bounds on the availability of items in a model We further provide approximations for computing a lower bound on the recourse available to users We can define an item-region for the top-N case when i for any user factors in the set Pi p p all but at most N items As in the previous section this region is contained within the latent space which is generally of relatively small dimension However its description depends on the number of items which will generally be quite large In the case of N this dependence in linear and therefore manageable For N the item region is the union over polytopic cones for subsets describing all but at most N items Therefore the description of each item region requires O linear inequalities For systems with tens of thousands of items even considering N becomes prohibitively expensive To ease the notational burden of discussing the ranking logic around top-N selection in what follows we define the operator max N which selects the N th largest value from a set This allows us to write for example all but at most N items max N Sufficient Condition for Availability To bypass the computational concerns we focus on a sufficient condition for item availability The full description of the region Pi is not necessary to verify non-emptiness rather showing the existence of any point in the latent space v Rd that satisfies v Pi is sufficient Using this insight we propose a sampling approach to determining the availability of an item For a fixed v and any N it is necessary only to compute and sort which is an operation of complexity O md While this sampling approach could make use of gridding randomness or empirical user factor distributions we propose choosing the sample point v Result The item-region Pi is nonempty if max N When this condition holds we say that item i is aligned-reachable The percent of items that are aligned-reachable is a lower bound on the availability of items Note that this is a sufficient rather than a necessary condition it is possible to have Pi for a nonempty Pi Figure illustrates an example where this is the case the yellow latent factor lies within P purple even though P yellow is nonempty As a result aligned-reachability yields an underestimate of the availability of items in a system Model Audit To use the aligned-reachable condition as a generic model audit we need to sidestep the specificity of the set of seen items We propose an audit based on this condition with and an increased value for N where increasing N compensates for discarding the effect of the items which have been seen This audit is described in Algorithm If we set N N Nh where N is the number of items recommended by the system then item availability has the following interpretation if an item is not top-N available then that item will never be recommended to a user who has seen fewer than Nh items Algorithm Item-Based Model Audit Result Lower bound on item availability m unavailable m initialize m unavailable N N Nh for i m do compute N if then m unavailable end end If we consider the set of all possible users to be users with a history of at most Nh this model audit counts the number of aligned-unreachable items returning lower bound on the overall availability of items We can further use this model audit to propose constraints or penalties on the model during training Ensuring aligned-reachability is equivalent to imposing linear constraints on the matrix A max N Ai While this constraint is not convex relaxed versions of it could be incorporated into the optimization problem to ensure reachability during training We point this out as a potential avenue for future work latent dimension R M S E Predictive Accuracy Figure The test RMSE of the matrix factorization models on the MovieLens dataset Sufficient Condition for Recourse User recourse inherits the computational problems described above for N We note that the region Pi is not necessarily convex though it is the union of convex regions While the problem could be solved by first minimizing within each region and then choosing the minimum value over all regions this would not be practical for large values Therefore we continue with the sampling perspective to develop an efficient sufficient condition for verifying the feasibility of We propose testing feasibility with the condition v Bai Pi for ai argmin Rk Ba v By checking feasibility for each i we verify a lower bound on the amount of recourse available to a user considering their specific rating history and the allowable actions Note that if the control matrix B is full rank then we can find a point ai such that v Bai meaning that items who are aligned-reachable are also reachable by users The rank of B is equal to the rank of so as previously observed item availability implies recourse for any user with control over at least d ratings whose corresponding item factors are linearly independent Even users with incomplete control have some level of recourse For the following result we define as the projection matrix onto the subspace spanned by B Then let be the component of the target item factor that lies in the space spanned by the control matrix B and v v be the component of the anchor point that cannot be affected by user control Result When R R a lower bound on the amount of recourse for a user u is given by the percent of unseen items that satisfy q i v max N q v Note that this statement mirrors the sufficient condition for items with modifications relating both to the directions of user control and the anchor point In short user recourse follows from the ability to modify ratings for a set of diverse items and immutable ratings ensure the reachability of some items potentially at the expense of others N u m b er of it em s Top-N Availability d d d d d d Figure Only some of the total movies are aligned-reachable especially for models with smaller complexity and for smaller recommendation set sizes N EXPERIMENTAL DEMONSTRATION In this section we demonstrate how our proposed analyses can be used a a tool to audit and interpret characteristics of a matrix factorization model We use the MovieLens M dataset which comes from an online movie recommender service called MovieLens The dataset movies by users The ratings fall between and in increments We chose this dataset because it is a common benchmark for evaluating rating predictions Using the method described by Rendle et al in their recent work on baselines for recommender systems we train a regularized matrix factorization model This is model incorporates item user and overall bias terms Appendix A includes full description of adapting our proposed audits to this model We examine models of a variety of latent dimension ranging from d to d The models were trained using the libfm SGD with regularization parameter and step size for epochs on of the data verifying accuracy on the remaining with a random global test/train split These methods match those presented by Rendle et al and reproduce their reported accuracies Figure In Appendix B we present a similar set of experiments on the LastFM dataset Item-Based Audit We begin by performing the item-based audit as described in Section Figure displays the total number of aligned-reachable movies for various parameters N It is immediately clear that all items are baseline-reachable in only the models with the largest latent dimension Indeed we can conclude that the model with d has only about availability for users with a history of under movies On the other hand the models with the highest number of ratings m u la ti ve fr u en average ratings m u la ti ve fr u en Popularity of Unavailable Items available d d d d unavailable d d d d Figure Unavailable items are systematically less popular than available items they are rated less frequently and have lower average ratings in the training data Each curve represents the cumulative density function CDF of the popularity measure within the available green and unavailable red items The black line represents the CDF of the combined population This trend is true for models of varying complexity complexity d have about availability for even the smallest values of N We further examine the characteristics of the items that are unavailable compared with those that are available We examine two notions of popularity total number of ratings and average rating In Figure we compare the distributions of the available and unavailable items for N in the training set on these measures The unavailable items have systematically lower popularity for various latent dimensions This observation has implications for the outcome of putting these models in feedback with users If unavailable items are never recommended they will be less likely to be rated which may exacerbate their unavailability if models are updated online We highlight this phenomenon as a potential avenue for future work While the difference in popularity is true across all models it is important to note that there is still overlap in the support of both distributions For a given number of ratings or average rating some items will be available while others will not meaning that popularity alone does not determine reachability System Recourse for Users Next we examine the users in this dataset We use the combined testing and training data to determine user ratings and histories For this section we examine randomly selected users and only the most rated items Sub-selecting items and especially choosing them based on popularity means that these experimental results are an overestimation of the amount of recourse available history length re ac ab le p er ce n t of u n se en it em s Top- Recommended history length re ac ab le p er ce n t of u n se en it em s Top- Recommended d d d d Amount of Recourse via History Edits Figure The proportion of unseen items reachable by users varies with their history length A LOESS regressed curve illustrates the trend Less complex models are better for shorter history lengths while more complex models reach higher overall values to users Additionally we allow ratings on the continuous interval R rather than enforcing integer constraints meaning that our results represent the recourse available to users if they were able to precisely rate items on a continuous scale Despite these two approximations several interesting trends on the limits of recourse appear We begin with history edits and compute the amount of recourse that the system provides to users using the sufficient condition in Result Figure shows the relationship with the length of user history for several different latent dimensions First note the shape of the curved a fast increase and then leveling off for each dimension d For short histories we see the limiting effect of projection onto the control matrix For longer histories as the rank approaches or exceeds d the baseline item-reachability determines the effect The transition between these two regimes differs depending on the latent dimension of the model Smaller models reach their maximum quickly while models of higher complexity provide a larger amount of recourse to users with long histories This is an interesting distinction that connects to the idea of power users Next we consider reactions where user input comes only through reaction to a new set of items while the existing ratings are fixed Figure displays the amount of recourse for two different types of new items first the case that users are shown a completely random set of unseen items and second the case that they are shown the items with the highest predicted ratings The top panel displays the amount of recourse provided by each model and each type of recommendation There are two important trends First smaller models offer larger amounts of recourse this is because we are in the regime of few mutable ratings analogous to the availability of items to users with short histories in the previous figure Second for each model size the random recommendations provide latent dimension p er ce n t re ac ab le Amount of Recourse via Reactions recommendation top random history length p er ce n t re ac ab le d history length p er ce n t re ac ab le d Figure When actions are constrained to reaction to a set of items lower complexity models provide higher reachability A random set of items provides slightly more recourse to users than if the set is selected based on predicted user preferences Furthermore there is a slight trend that users with smaller history lengths have more available recourse more recourse than the top- and though the gap is not large it is consistent In the bottom panel of Figure we further examine how the length of user history interacts with this model of user behavior For both the smallest and the largest latent dimensions there is a downwards trend between reachability and history length This does not contradict the trend displayed in Figure in the reactions setting the rating history manifests as the anchor point v rather than additional degrees of freedom in the control matrix B It is interesting in light of recent works examining the usefulness of recency bias in recommender systems Finally we investigate the difficulty of recourse over all users and a single item In this case we consider top- recommendations to reduce the computational burden of computing the exact set Pi We pose the cost as the size of the difference between the user input a and the predicted ratings in the norm Figure shows the difficulty of recourse via reaction for the two types of new items a completely random set of unseen items and items with the highest predicted ratings We note two interesting trends First the difficulty of recourse does not increase with model size even though the amount of recourse is lower Second difficulty is lower for the random set of items than for the top- items Along with the trend in availability this suggests a benefit of suggesting items to users based on metrics other than predicted rating Future work should more carefully examine methods for constructing recommended sets that trade-off predicted ratings with measures like diversity under the lens of user recourse latent dimension co st Difficulty of Recourse recommendation Figure The difficulty of reaching a single item across users for different sets of new times The difficulty of recourse does not increase for the larger models despite the previously observed decrease in availability Furthermore we note that random items have lower difficulty DISCUSSION In this paper we consider the effects of using predicted user preferences to recommend content a practice prevalent throughout the Internet today By defining a reachability problem for top-N recommenders we provide a way to evaluate the impact of using these predictive models to mediate the discovery of content In applying these insights to linear preference models we see several interesting phenomena The first is simple but worth stating good predictive models when used to moderate information can unintentionally make portions of the content library inaccessible to users This is illustrated in practice in our study of the MovieLens and LastFM datasets To some extent the differences in the availability of items are related to their unpopularity within training data Popularity bias is a well known phenomenon in which systems fail to personalize and instead over-recommend the most popular pieces of content Empirical work shows connections between popularity bias and undesirable demographic biases including the under-recommendation of female authors YouTube was long known to have a popularity bias problem known as the Gangnam Style Problem until the recommendations began optimizing for predicted watch time over number of views Their new model has been criticized for its radicalization and political polarization The choice of prediction target can have a large effect on the types of content users can or are likely to discover motivating the use of analytic tools like the ones proposed here to reason about these trade-offs before deployment While the reachability criteria proposed in this work form an important basis for reasoning about the availability of content within a recommender system they do not guarantee less biased behavior on their own Many of the audits consider the feasibility of the recourse problem rather than its cost thus confirming possible outcomes rather than distinguishing probable ones Furthermore the existence of recourse does not fix problems of filter bubbles or toxic content Rather it illuminates limitations inherent in recommender systems for organizing and promoting content There is an important distinction between technically providing recourse and the likelihood that people will actually avail themselves of it If the cost function is not commensurate with actual user behavior this analysis may lend an appearance of fairness without substance With these limitations in mind we mention several ways to extend the ideas presented in this work On the technical side there are different models for rating predictions especially those that incorporate implicit feedback or perform different online update strategies for users Not all simple models are linear for example subset based recommendations offer greater scrutability and thus user agency by design Further more top-N recommendation is not the only option Post-processing approaches to the recommender policy could work with existing models to modify their reachability properties For example Steck proposed a method to ensure that the distribution of recommendations over genres remains the same despite model predictions One avenue for addressing more generic preference models and recommender policies is to extend the sampling perspective introduced in Section to develop a general framework for black-box recommender evaluation By sampling with respect to a user transition model the evaluation could incorporate notions of dynamics and user agency similar to those presented in this work Further future work could push the scope of the problem setting to understand the interactions between users and models over time Analyzing connections between training data and the resulting reachability properties of the model would to give context to empirical work showing how biases can be reproduces in the way items are recommended Similarly directly considering multiple rounds of interactions between users and the recommendation systems would shed light on how these models evolve over time This is a path towards understanding phenomena like filter bubbles and polarization More broadly we emphasize the importance of auditing systems with learning-based components in ways that directly consider the models behavior when put into feedback with humans In the field of formal verification making guarantees about the behavior of complex dynamical systems over time has a long history There are many existing tools though they are generally specialized to the case of physical systems and suffer from the curse of dimensionality We accentuate the abundance of opportunity for developing novel approximations and strategies for evaluating large scale machine learning systems