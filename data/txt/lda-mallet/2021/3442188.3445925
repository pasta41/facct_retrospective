TILT A GDPR-Aligned Transparency Information Language and Toolkit for Practical Privacy Engineering In this paper we present TILT a transparency information language and toolkit explicitly designed to represent and process transparency information in line with the requirements of the GDPR and allowing for amore automated and adaptive use of such information than established legalese data protection policies do We provide a detailed analysis of transparency obligations from the GDPR to identify the expressiveness required for a formal transparency language intended to meet respective legal requirements In addition we identify a set of further non-functional requirements that need to be met to foster practical adoption in real-world web information systems engineering On this basis we specify our formal language and present a respective fully implemented toolkit around it We then evaluate the practical applicability of our language and toolkit and demonstrate the additional prospects it unlocks through two different use cases a the inter-organizational analysis of personal data-related practices allowing for instance to uncover data sharing networks based on explicitly announced transparency information and b the presentation of formally represented transparency information to users through novel more comprehensible and potentially adaptive user interfaces heightening data subjects actual informedness about data-related practices and thus their sovereignty Altogether our transparency information language and toolkit allow differently from previous work to express transparency information in line with actual legal requirements and practices of modern web information systems engineering and thereby pave the way for a multitude of novel possibilities to heighten transparency and user sovereignty in practice CONCEPTS Applied computing Law Information systems Information systems applications Web data description languages Software and its engineering Formal language definitions Context specific languages Security and privacy Privacy protections KEYWORDS Data transparency GDPR data protection privacy privacy by design legal tech privacy engineering web privacy privacy law INTRODUCTION Transparency has been a core principle in philosophical legal and technical deliberations around privacy for decades This particularly applies to data privacy in everyday digital life To be able to act in a sovereign and self-determined way and actually make informed choices individuals need to have sufficient knowledge about the actual facts and givens regarding the processing of personal data including eg which party collects what personal data for which purposes how long this data is going to be stored et cetera Data protection laws and regulations around the world such as the European General Data Protection Regulation GDPR or the California Consumer Privacy Act CCPA therefore explicitly include transparency rules for data processing parties obligating them to reveal respective information to the data subjects These obligations are today typically fulfilled through respective transparency parts of written privacy policies Such privacy policies do however exhibit several shortcomings that severely limit their actual reception and comprehension on the side of data subjects First of all privacy policies are often long complex and written in legalese language making it hard for data subjects to locate transparency-related information and actually understand them correctly Second different privacy policies employ different logical structures and vocabularies for factually similar statements causing significant reading and decoding efforts for every new policy to be understood Such practice structurally discriminates people who are less privacy-literate Finally data transfers towards other parties are now a broadly established practice Data subjects wanting to see the whole picture in such contexts therefore have to read and understand multiple policies and establish the logical interdependencies between them Together with the ever-increasing number of services used and thus of privacy policies to be read this leads to a state where privacy policies including respective transparency statements are not read anymore before using a particular service and/or consenting to Being well aware of the slightly different notions between Privacy and Data Protection we use these terms interchangeably herein a certain collection and use of personal data Under such conditions transparency statements increasingly degenerate into rather self-serving formal compliance exercises instead of actually fostering data subjects informedness of decisions and self-sovereign conduct with regard to privacy For other areas of privacy dedicated technologies have repeatedly been demonstrated to be capable of lowering the cognitive and administrative effort required on the side of data subjects and thereby of re-aligning the actual real-world practice to the still valid original intentions behind privacy regulations Technologies for digitally mediated and partially automated consent provision are one example They lower individuals need to care about every single act of data sharing while still allowing them to fine-tune their consent to individual preferences in line with legal requirements for specificity thus counteracting ongoing trends towards overly broad consent provision Following the paradigm of privacy by design which basically requires all privacy principles to be appropriately reflected in technology we aim to achieve the same for the principle of transparency herein Our goal is thus to provide technical artifacts that significantly lower user-side efforts required for gathering and comprehending transparency information while at the same time providing the capabilities necessary to meet regulatory requirements and thus to actually be applicable in practice An indispensable precondition for such artifacts is the capability to represent relevant transparency information in a structured machine-readable format and the possibility to easily employ this representation in real-world information systems For this purpose we particularly provide the following contributions An in-depth analysis of transparency information that needs to be expressible to meet the requirements of the GDPR A formal specification of a structured machine-readable language meeting these expressiveness requirements the Transparency Information Language Two fully implemented libraries for widely used programming languages Python and Java allowing to easily process and manage respective representations in real-world information systems the most important parts of the Toolkit around our language A demonstration of the opportunities arising from the machine-readable representation and technical mediation of transparency information through two exemplary case studies for a inter-organizational analyses of stated data transfers and b novel adaptive user interfaces We thus explicitly follow an engineering-driven approach providing novel practically usable technological artifacts that address a currently open socio-technical challenge Our respective considerations and contributions unfold as follows Section summarizes related work on transparency enhancing technologies and identifies requirements for the aspired language and toolkit Afterwards section distills the necessary expressiveness of a transparency information language based on structured GDPR study Based on these deliberations the new transparency information language is formally defined and technically implemented see section In See for instance Art GDPR requiring technical measures designed to implement data protection principles and thus covering all principles mentioned in Art section the language is practically embedded into a toolkit with storage and interoperability functionalities In section we then demonstrate two exemplary applications which enhance transparency using the language and toolkit components Eventually possible future work is conceptualized in section Finally section concludes RELATEDWORK REQUIREMENTS Technical approaches to privacy-related transparency are commonly discussed under the term of transparency-enhancing technologies TETs Such TETs exist in a broad variety of forms addressing transparency from many different angles In particular TETs comprise such diverse technologies as generating a location history based on social media entries visualizing data exports phone sensor permission management or in-browser cookie tracking For categorizing these TETs different taxonomies exist Zimmerman particularly distinguishes ex-ante realtime and ex-post TETs with ex-ante TETs providing information about a processors intended data collection and processing before the collection Our aspired goal of making transparency-related statements more accessible and comprehensible for data subjects to heighten the informedness of their decisions clearly falls into this ex-ante category Often mentioned privacy dashboards providing an integrated view to current and past possession and processing of data in contrast would fall into the ex-post category and thus clearly differ from our intent Within the subdomain of ex-ante TETs in turn the herein addressed problems associated with written transparency statements not meeting their originally intended goals are particularly subject to two research strands Automated knowledge extraction from privacy policies and pre-existing transparency languages Both shall be introduced briefly before distilling requirements for our aspired language and toolkit Privacy Policy Knowledge Extraction One established approach for technically addressing transparency-related problems is to extract respective information from preexisting policies by means of natural language processing NLP and to then provide additional functionalities on top of the so-extracted data This particularly includes attempts based on extensive static rules and named entity recognition as well as more dynamic ones employing methods of crowd sourcing and machine learning So far however these typically focus on merely identifying blocks from a privacy policy dedicated to different subjects like collection instead of actually extracting information at a sufficient level of detail or achieve accuracies that are insufficient to be considered a reasonable basis for providing functionality with legal relevance on top of them In addition respective endeavors do typically not pay explicit regard to the actual and detailed regulatory requirements A structured machine-readable and interoperable representation that can be used for a multitude of different purposes is typically also out of scope The higher-level functionality aspired and sometimes even implemented in above-mentioned projects may however serve as blueprint for what we intend to facilitate with our structured transparency language and toolkit In particular this includes enhanced graphical presentations intended to improve comprehensibility chatbots providing answers about a companys personal data practices or automatically generated icon representations allowing for a quick and intuitive overview of personal data practices Transparency Languages Given the insufficient prospects of starting with pre-existing textual transparency information from privacy policies an alternative approach is to start with a structured and machine-readable representation of the transparency information to be provided Frameworks proposed in this regard so far like respective parts of the WCs early standard or industry-driven initiatives like IABs Transparency Consent Framework do however lack the expressiveness actually required by privacy regulation For instance provided a severely limited vocabulary of pre-defined purposes which does not suffice to express actually occurring purposes in the required level of specificity see eg while the IAB Europe Framework completely neglects several information obligations eg rights to access automated decision making onward transfer etc and claims registration fees for participation More recent policy languages eg come closer to the legally required expressiveness aspired herein However these typically try to cover all aspects of a privacy policy from the outset resulting in a considerable level of complexity eg considering the problem of de-identification mixed with transparency obligations and/or still resemble the concept of limited fixed vocabularies known from earlier proposals At the same time they typically lack publicly available and easily adoptable reference implementations in the form of re-usable libraries severely limiting their practical applicability in real-world web information systems The effective adoption of privacy languages also has been detained because of missing content validation and not even rudimentary user interfaces Altogether none of the transparency-related technologies and languages proposed so far thus satisfies our intent to represent transparency information as required by the GDPR ex-ante in a machine-readable form and in line with actual legal requirements while at the same time being easily usable in practice Requirements Based on the above and on other works in the domain of information systems engineering in general and practice-oriented privacy engineering in particular esp we can identify a set of requirements our aspired language and toolkit have to fulfill These comprise specifications regarding what functionality is to be implemented functional requirements FR as well as rather non-functional requirements NFR describing additional characteristics that the language and toolkit must provide in order to ease and foster practical adoption FR Sufficient expressiveness to meet legal obligations The most important requirement is a functional one Our language must be capable of expressing all transparency information required by the GDPR in a sufficiently specific form Only when this is the case We believe that fixed vocabularies provided within the language either do simplify far too much by using categories that are not very meaningful or they cannot by definition reflect all industries areas of life or possible processing activities our language can actually form a sustainable basis for novel technical approaches to transparency that still unfold legal relevance and thus overcome the limitations of previous approaches like see above The details constituting this requirement will be elaborated further in section FR Possible standardization of commonly used transparency information items Another goal regards the standardization of as many transparency information items as possible Through the introduction of structured-types nomenclature and format conventions the content becomes more accessible and interoperable Besides fostering the independent development of different components on top of commonly shared semantics this would also allow to create for instance templates for transparency declarations standardized mappings to textual representations etc FR Support for inter-system communication and versioned persistence Our language is explicitly intended to be used in online contexts with transparency information being exchanged between multiple sub-components of an overall system external services user-side applications etc Capabilities for communicating and storing respective representations as well as for referring to them across component- and system boundaries in a standardized manner are therefore indispensable In particular this should be possible in a version-aware form allowing to update transparency information while still keeping previous versions available FR Application- or Domain-Specific Extensibility The benefits of standardization laid out in notwithstanding specific application domains service providers or even single applications might raise additional transparency requirements that cannot reasonably be covered in a generalized manner This could for instance be the case because of sector-specific regulatory obligations going beyond those from the GDPR To also facilitate the usage of our artifacts in such settings they must allow to implement respective extensions on top of their underlying general functionality In particular this should be possible in a way that preserves the applicability of extensions in case of our general components being updated thus speaking against domain-specific forks for example NFR Implementation as reusable artifact A core principle of software engineering is to not implement similar functionality multiple times but to encapsulate respective functionality in re-usable components as far as possible Besides avoiding inconsistencies between different implementations and allowing to focus development and maintenance efforts on just one target this also fosters wider adoption and simpler integration into real-world systems Our technical artifacts should therefore be provided in the form of reusable artifacts that can be integrated into relevant development environments as seamlessly as possible NFR Developer-Friendliness and and low implementation overhead Besides the provision as reusable artifacts developer-friendliness and low implementation efforts are also crucial for facilitating adoption in practice On the one hand this is the case because developers will try to avoid sophisticated and hard-to use technical mechanisms while intuitive and easily integratable ones might be adopted out of developers intrinsic motivation or mere curiosity On the other hand developer-friendliness and ease of implementation are also relevant for a more formal reason Art of the GDPR requires appropriate technical measures to be implemented for materializing data protection principles including transparency The appropriateness in turn depends amongst other factors on the costs of implementation The lower the implementation efforts and thus costs for adopting a novel technical mechanism are the more likely is this adoption therefore to be considered obligatory Developer-friendliness and low implementation efforts thus also have legal implications EXPRESSIVENESS REQUIREMENTS To unfold legal relevance as a possible replacement for written transparency statements and thus to provide actual societal and business value a transparency language must be capable of expressing all legally required transparency information at a sufficient level of detail We refer to this capability under the term of expressiveness Given its prominent role as a blueprint for privacy and data protection regulations worldwide we extract respective requirements from the European General Data Protection Regulation GDPR Here transparency requirements are set out in Articles More precisely Art requires controllers to provide transparency information to data subjects in a concise transparent intelligible and easily accessible form Even though implicitly assuming the provision through traditional purely textual policies the GDPR also foresees alternative communicative channels such as standardized and machine-readable icons see Art The transparency information to be provided to data subjects proactively in turn are laid out in Art and in more detail for different settings distinguishing cases where personal data is collected from the data subject from those where it is obtained from elsewhere Beyond these Art defines information to be provided to data subjects upon request particularly also including the personal data itself Leaving aside the latter which is overly complex and diverse across different data controllers to be covered by a uniform language as aspired herein the transparency obligations from Art strongly overlap and shall serve as the basis for determining the required expressiveness herein Besides the mentioned ones Art obligating data controllers to maintain records of processing activities also exhibits strong overlaps regarding the information to be kept in such records Even though serving the principle of accountability and not the one of transparency cf Art our aspired language may thus also play a role in this regard later We therefore include the requirements from Art in our analysis The resulting summary of all relevant articles is provided in table Each of these transparency requirements can be translated into a corresponding building block for our aspired transparency information language The required data fields and respective data types to be included in these blocks result either from the GDPR itself or from technical considerations regarding unambiguousness In some cases the exact data fields and types to be provided are not externally given and we had to make reasonable determinations to allow for a well-specified formal representation in subsequent steps Due to space constraints the considerations behind each and every field and type cannot be laid out herein Two building blocks shall however exemplarily be examined in some more detail Table Transparency information obligations by the GDPR