Efficient Search for Diverse Coherent Explanations
Chris Russell
The University of Surrey and The Alan Turing Institute
crussell@turing.ac.uk
ABSTRACT
This paper proposes new search algorithms for counterfactual expla-
nations based upon mixed integer programming. We are concerned
with complex data in which variables may take any value from a
contiguous range or an additional set of discrete states. We propose
a novel set of constraints that we refer to as a “mixed polytope” and
show how this can be used with an integer programming solver to
efficiently find coherent counterfactual explanations i.e. solutions
that are guaranteed to map back onto the underlying data structure,
while avoiding the need for brute-force enumeration. We also look
at the problem of diverse explanations and show how these can be
generated within our framework.
CCS CONCEPTS
• Human-centered computing → Human computer interaction
(HCI); • Theory of computation → Integer programming; Inte-
ger programming; • Computing methodologies → Supervised
learning;
KEYWORDS
Counterfactual Explanation, Machine Learning, Linear Program
ACM Reference Format:
Chris Russell. 2019. Efficient Search for Diverse Coherent Explanations. In
FAT* ’19: Conference on Fairness, Accountability, and Transparency (FAT* ’19),
January 29–31, 2019, Atlanta, GA, USA. ACM, New York, NY, USA, 9 pages.
1 INTRODUCTION
A fundamental tension exists between the high performance of
machine learning algorithms and the notion of transparency (Lip-
ton, 2016). The large complex models of machine learning are cre-
ated by researchers and system builders looking to maximise their
performance on real-world data, and it is precisely their size and
complexity that allows them to fit to the data giving them such
high-performance. At the same time such models are simply too
complex to fit in their builders minds; and even the people that
created the systems need not understand why they make particular
decisions.
This tension becomes more apparent as we start using machine
learning to make decisions that substantially alter people’s lives. As
algorithms are used to make loan decision; to recommend whether
or not some one should be released on parole; or to detect cancer, it
Permission to make digital or hard copies of part or all of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for profit or commercial advantage and that copies bear this notice and the full citation
on the first page. Copyrights for third-party components of this work must be honored.
For all other uses, contact the owner/author(s).
FAT*’19, January 2019, Atlanta, Georgia USA
© 2019 Copyright held by the owner/author(s).
ACM ISBN 978-1-4503-6125-5/19/01.
is vital that not only are the algorithms used as accurate as possible,
but also that they justify themselves in some way, allowing the
subject of the decisions to verify the data used to make decisions
about them, and to challenge inappropriate decisions
A common remedy to avoid this trade-off is to learn the complex
function, and then fit simple models about datapoints providing
human comprehensible approximations of the underlying function.
While popular in the machine learning community, there are many
challenges in conveying the quality of the approximation and the
domain over which it is valid to a lay audience.
Another promising approach to explaining the incomprehensi-
ble models of machine learning lies in counterfactual explanations
(Lewis, 1973; Wachter et al., 2018). This recent approach to explain-
ablity bypasses the problem of describing how a function works
and instead focuses on the data. Instead, counterfactual explana-
tions attempt to answer the question “How would my data need to
be changed to get a different outcome?”. Wachter et al. make the
argument that there are three important use cases for explanation:
(1) to inform and help the individual understand why a particu-
lar decision was reached,
(2) to provide grounds to contest the decision if the outcome is
undesired, and
(3) to understand what would need to change in order to receive
a desired result in the future, based on the current decision-
making model.
and that counterfactual explanations satisfy all three.
Although making the case for the use of counterfactuals and
showing how they could be effectively calculated for common clas-
sifiers, Wachter et al. left many technical questions unanswered.
Of particular concern is the issue of how should we generate coun-
terfactuals efficiently and reliably for standard classifiers.
This paper focuses on the technical aspects needed to generate co-
herent counterfactual explanations. Keeping the existing definition
of counterfactual explanations intact, we look at how explanations
can be reliably generated. We make two contributions:
(1) Focusing on primarily the important problem of explaining fi-
nancial decisions, we look at the most common case in which
the classifier is linear (i.e. linear/logistic regression, SVM etc.)
but the data has been transformed via a mix-encoding based
upon 1-hot or dummy variable encoding. We present a novel
integer program based upon a “mixed polytope” that is guar-
anteed to generate coherent counterfactuals that map back
into the same form as the original data.
(2) We provide a novel set of criteria for generating diverse
counterfactuals and integrate them with our mixed polytope
method.
Previously, Wachter et al. strongly made the case that diverse coun-
terfactuals are important to informing a lay audience about the
DOI: 10.1145/3287560.3287569
FAT*’19, January 2019, Atlanta, Georgia USA Chris Russell
decisions that have been made, writing that: “...individual coun-
terfactuals may be overly restrictive. A single counterfactual may
show how a decision is based on certain data that is both correct
and unable to be altered by the data subject before future decisions,
even if other data exist that could be amended for a favourable out-
come. This problem could be resolved by offering multiple diverse
counterfactual explanations to the data subject.” but to date no one
has proposed a concrete method for generating them.
We evaluate our new for mixed data approach on standard ex-
plainability problems, and the new FICO explainability dataset,
where we show our fully automatic approach generates coherent
and informative diverse explanations for a range of sample inputs.
2 PRIORWORK
The desire for explanations of how complex computer systems
make decisions dates back to some of the earliest work on expert
systems (Buchanan and Shortliffe, 1984). In the context of machine
learning, much prior work has focused upon providing human-
comprehensible approximations (typically either linear models
(Lundberg and Lee, 2017; Montavon et al., 2017; Ribeiro et al., 2016;
Shrikumar et al., 2016), or decision trees (Craven and Shavlik, 1996))
of the true decision making criteria. This fact that the simplified
model is only an approximation of the true decision making criteria
means that these methods avoid the trade-off between accuracy
and explainablity discussed in the introduction, but also raises the
question of how accurate these approximations really are.
These approximate models are either fitted globally (Craven
and Shavlik, 1996; Martens et al., 2007; Sanchez et al., 2015) over
the entire space of valid datapoints, or as a local approximation
(Lundberg and Lee, 2017; Montavon et al., 2017; Ribeiro et al., 2016;
Shrikumar et al., 2016) that only describes how decisions are made
in the neighbourhood of a particular datapoint.
Another important class of explanations comes from “case-based
reasoning” (Caruana et al., 1999; Kim et al., 2014) in which the
method justifies the decision/score made by the algorithm by show-
ing data points from the training set that the algorithm found similar
in some sense.
Finally, there are methods for contrastive or counterfactual ex-
planations that seek a minimal change such that the response of
the algorithm changes e.g.
“You were denied a loan because you have an income
of $30,000, if you had an income of $45,000 you would
have been offered the loan.”
Martens and Provost (2013) was the first to propose the use of this
technique in the context of removing words for website classifica-
tion, while Wachter et al. (2018) proposed it as a general framework
suitable for continuous and discrete data. Use of counterfactual
explanations have strong support from the social sciences (Miller,
2017), and form part of the established philosophical literature on
explanations (Kment, 2006; Lewis, 1973; Ruben, 2004). Others have
called for the use of counterfactuals in explaining machine learn-
ing (Doshi-Velez et al., 2017). Finally, Binns et al. (2018) followed
Lim and Dey (2009) in performing a user study of explanations1.
1Counterfactual explanations are referred to as “why-not explanations” by Lim and
Dey (2009), and “sensitivity” by Binns et al. (2018).
Binns et al. (2018) found evidence that users prefer counterfactual
explanations over case-based reasoning.
For a more detailed review of the literature, please see Mittelstadt
et al. (2019).
Finally, concurrent with this work, Ustun et al. (2019), have also
proposed the generation of diverse counterfactuals using mixed in-
teger programmes for linear models. However, they do not consider
the case of complex data in which individual variables may take
either a value from a continuous range, or one of a set of discrete
values.
2.1 Formalising Counterfactual Explanations
We follow Lewis (1973) in describing a counterfactual as a “close
possible world” in which a different outcome (or classifier response)
occurs. In the context of classifier responses, we can formalise this
as follows:
Given a datapoint x , the closest counterfactual x ′ can then be
found by solving the problem
argmin
x ′
d(x ,x ′) (1)
such that: f (x ′) = c (2)
where d(·, ·) is a distance measure, f the classifier function and c
the classifier responses we desire.
This is a much looser definition of counterfactual than that used
in the causal literature (e.g. Pearl (2000)) and some thought needs to
go into the choice of distance function to make the counterfactuals
found useful.
In the context of human comprehensible explanations, it is im-
portant that the change between the original datapoint, and the
counterfactual is simple enough that a person can understand it,
and that the way the datapoint is altered to generate the counter-
factual should also be representative of the original dataset in some
way.
To meet these objectives, Wachter et al. suggested making use of
the ℓ1 norm, weighted by the inverse Median Absolute Deviation,
which we write as | | · | |1,MAD. This has two noticeable advantages:
(i) The counterfactuals found are typically sparse i.e. they differ
from the original datapoint in a small number of factors, making
the change easier to comprehend. (ii) In some limited sense the
distance function is scale free, in that multiplying one dimension
by a scalar will not alter the solution found, and robust to outliers.
Wachter et al. (2018) proposed solving this problem as a La-
grangian:
min
x ′
max
λ
| |x − x ′ | |1,MAD + λ(f (x) − c)2 (3)
As the term λ tends to infinity this converges to a minimiser of
| |x −x ′ | |1,MAD that satisfies f (x) = c or at least is a local minima of
(f (x) − c)2. Stability is a major concern when using the Lagrangian
approach to generating counterfactual explanations. It is important
that the counterfactuals generated do what they set out to do and
satisfy the constraint f (x ′) ≤ 0 to within a very tight tolerance.
For this to happen the value λ much be sufficiently large and this
induces stability issues (Wright and Nocedal, 1999). Moreover, the
shape of the objective for is reminiscent of pathological optimisation
problems. Noticeably, for large λ the objective forms a deep narrow
valley around the decision boundary similar to a high-dimensional
analogue of the Rosenbrock or ‘banana’ function (Rosenbrock, 1960),
while the sparsity of the solution found means that the minima
occurs at gradient discontinuities in the objective function.
To avoid these issues we preserve the original formulation of
equation (1), with explicit constraints. We show how this problem
can be formulated as a linear programme when f is linear and
distance function d takes the form of a weighted ℓ1 norm. Where
they occur, binary constraints (such as this variable must take
only values 0 or 1) are treated as integer constraints and our final
formulation is efficiently solved using a Mixed Integer Program
Solver.
3 COHERENT COUNTERFACTUALS ON
MIXED DATA
We now outline our procedure for generating coherent counter-
factual explanations for linear classifiers, including logistic and
linear regression and SVMs, defined over complex datasets where
the variables may take any value from a contiguous range or an
additional set of discrete states,
For such mixed data the notion of distance becomes problematic.
For example, in the FICO dataset, one of the variables that mea-
sures “Months Since Most Recent Delinquency” may take either a
non-negative value corresponding to the number of months, or a
set of special values:
−7 “Condition not Met (e.g. No Inquiries, No Delinquencies)”
−8 “No Usable/Valid Trades or Inquiries”
or −9 “No Bureau Record or No Investigation”.
Beyond the computational challenges in searching over all valid
values for all sets of variables, it is apparent that the change from
special value −7 to −8 is fundamentally different from the shift
between “7 months since most recent delinquency” and “8 months
since most recent delinquency”.
A common trick among applied statisticians when training pre-
dictors on this kind of data is to augment it using a variant of the
one-hot (or dummy variable) encoding. Here, a variable xi that
takes either a contiguous value, or one k discrete states is replaced
by k + 1 variables. The first of these variable takes either the con-
tiguous value, if xi is in the contiguous range or a fixed response
Fi (typically 0) if xi is in a discrete state. The remaining k variables
di,1, . . . ,di,k are indicator variables that take value 1 if xi is in the
appropriate discrete state and 0 otherwise. A linear classifier can
be trained on these encoded datapoints instead of the original data
with substantially higher performance.
The challengewith using such embedding into higher-dimensional
spaces, and then computing counterfactuals in the embedding space,
is that the extra degrees of freedom allow nonsense states (for ex-
ample turning all indicator variables on) which do not map back
into the original data space. We show how a small set of linear con-
straints can avoid many of these failures, and by combining it with
simple integer constraints for the indicator variables guarantee that
the counterfactual found is coherent. We will refer to the space
enclosed by these linear constraints as the “mixed polytope”.
We refer to a particular datapoint a decision has been made about
as x and it’s individual components as xi . We write ci for the ith
contiguous variable that can take values in the range [Li ,Ui ] and
use di, j for the jth component of the ith set of indicator variables
that has value 1 if xi is taking the jth discrete value. To make
optimisation tractable under these constraints we assume that this
decision has been made by a linear function f (x) = w · x + b.
The mixed polytope of variable i then is described by the linear
constraints:
∑
j
di, j + di,c = 1 (4)
Fi, − li + ui = ci (5)
0 ≤ li ≤ (Li − Fi )di,c (6)
0 ≤ ri ≤ (Ri − Fi )di,c (7)
di, j ∈ [0, 1] ∀j (8)
where di,c is an additional indicator value that shows that variable
v is takes a contiguous value. It is immediately obvious that if the
variables di, j are binary, i.e. take values {0, 1}, then any vector
[ci ,di,1, . . . ,di,k ] that lies in the mixed polytope is consistent with
a standard mixed encoding from a consistent state. Moreover, the
polytope is tight in so much as optimising a linear objective defined
directly over the variables d and c would result in a valid solution.
However, we are unable to take advantage of this, as the additional
constraint on the value of f (x) further constrains the polytope and
potentially allows for fractional optimal solutions if di is not forced
to be binary. We are now well placed to write down an Integer
Program to generate counterfactuals. We write x̂ for the mixed
encoding of datapoint x and assume that our classifier is linear in
the embedding space.
We seek:
argmin
x ′
| |x̂ − x ′ | |1,w (9)
such that: f (x ′) ≤ 0 (10)
x ′ lies on the mixed polytope (11)
di, j ∈ {0, 1} ∀i, j (12)
where | |·| |1,w is a weighted ℓ1 normwith theweights to be discussed
later. Note that we now use the constraint f (x) ≤ 0, rather than
f (x) = 0 as it is possible that changing the state of one of the
discrete variables will take us over the boundary rather than up to
it.
This can be expanded into a linear program. As f is a linear
classifier we can split it into linear sub-functions over the dis-
crete and contiguous values (d and c respectively) and rewrite it as
f (x ′) = a · c +
∑
i a
′
i ·di +b allowing f (x ′) ≤ 0 to be replaced with
the linear constraint. The objective minc | |x̂c − c | |1,w can be made
linear using the standard transformation:
min
c
| |x̂ − c | |1,w = min
c,д,h
∑
i
(дi + hi ) (13)
such that: 0 ≤ дi , x̂i − ci ≤ дi ∀i (14)
0 ≤ hi , x ′i − ci ≤ hi ∀i (15)
Putting this all together it gives us the following program
arg min
c,d,д,h
w · (д + h) +
∑
i
w ′
i · (di −
ˆdi ) (16)
such that: a · (д + h) +
∑
i
a′i · di + b ≤ 0 (17)
0 ≤ дi , x̂i − ci ≤ дi ∀i (18)
0 ≤ hi , ci − x̂i ≤ hi ∀i (19)
mixed polytope conditions hold (20)
di, j ∈ {0, 1} ∀i, j (21)
The encoding in equation (13) used for the continuous variables is
not needed for the discrete variables, as owing to their binary nature,
we can simply choose the sign of w ′ appropriately to penalise
switching away from the state of d̂i . These equations can be given
to a standard MIPS solver, such as Gurobi Optimization (2018),
allowing coherent counterfactuals to be automatically generated.
3.1 Choices of Parameter
The solution found depends strongly upon the choice of parameters
w and f , which can be adjusted given better knowledge of the
problem or what the explanations found should look like. Here we
present some simple heuristics that give good results in practice.
Choice ofw . We follow Wachter et al. in the use of the inverse
median absolute deviation (MAD) forw with some small modifica-
tions. We consider the contiguous and discrete values separately
and generate the inverse MAD for contiguous regions by discarding
datapoints that take one of the given discrete labels.
For the discrete labels, the measure of inverse MAD is inappro-
priate for any distribution over binary labels as the median absolute
deviation over any distribution of binary labels is always zero. With
only two possible states, the median will coincide with the mode
and therefore the median of the absolute deviation will be zero2.
Instead, for binary variables we replace the MAD with the stan-
dard deviation over the data multiplied by a normalising constant
k = Φ−1(3/4) ≈ 1.48 to make it commensurate with the use of
MAD elsewhere. We usem to refer to these choices of weights.
Givenm, we set thew =m, for all parameters penalising changes
in the contiguous region of data . For the parametersw ′ that govern
the cost of transitions from discrete states, we adapt w ′ depend-
ing on the value taken by the original datapoint we are seeking
counterfactuals for. We wish transitions to any new discrete state
to be penalised by the scaled inverse standard deviation associated
with that state, while a transition away from a current discrete
state to the contiguous region should be penalised by the scaled
inverse standard deviation of the current state. We achieve this as
follows: Given the scale parametersm′, we setw ′
i,c = 0 and if xi is
currently in discrete state i , setw j :=mj −mi for all j , i and final
setmi := −wi . This has the required properties.
Choice of Fi . Although we introduced the variable Fi in the
context of training the model, it can also be adjusted on a per-
explanation basis, providing the intercept value b is also altered to
compensate. We choose the value Fi in such a way that when x̂i is
2In the case where it’s a 50/50 split between the two binary states, the MAD is ill-
defined but one possible solution still remains zero.
in the contiguous range, it does not incur an additional penalty to
transitioning to a discrete state. This is done setting Fi := xi . On the
other-hand, when x̂i takes a discrete value, we wish to ensure that
transitioning to the contiguous range gives you a representative
and typical value without incurring an additional cost. This is done
by setting Fi = median(Xi ).
4 DIVERSE EXPLANATIONS
In the original paper of Wachter et al. (2018) the authors note
that diverse counterfactual explanations may often be useful – if
someone wishes to improve their credit score, the first route to
altering their data that you suggest may not be the useful for them,
and another explanation would be more useful. Equally, if no other
explanation exists, this too is valuable information for that person.
Wachter et al. suggested local optima might be one source of
diversity. For linear classifiers their objective (3) is convex in x ′ for
any choice of λ, and for problems of this particular form, only one
minima exists.
Instead we take an different approach and induce diversity by
restricting the state of variables altered in previously generated
counterfactuals. This is done by following a obeying a simple set
of rules which we give in the following paragraph.
Diversity constraints: If a particular discrete state has been se-
lected in a counterfactual but not in the original data we prohibit
the transition to that state, but allow transitions to other discrete
states by the same variable. If the counterfactual alters a discrete
state to one in the contiguous range we prohibit that transition,
while if it alters an already contiguous state to a new contiguous
value we prohibit altering the contiguous state but allow transitions
to one of the discrete states.
Each constraint is added individually, and if the addition of a new
constraint means that the mixed integer program can no longer
be satisfied, the constraint is immediately removed. The process
terminates when the new counterfactual explanations generated is
the same as the previous explanation.
Sample outputs of the entire procedure are discussed in the
following section.
5 EXPERIMENTS
To demonstrate the effectiveness of our approach, we generate
diverse counterfactuals on a range of problems. All explanations
generated will be human readable text that show the sparse changes
needed. All text will take the form:
You got s c o r e ____ .
One way you cou ld have got s c o r e ____ i s i f :
____ took va lue ____ r a t h e r than ____
Another way you cou ld have got s c o r e ____ i s i f :
____ had taken va lue ____ r a t h e r than ____
where the blanks are completed automatically. The list of explana-
tions will be naturally ranked by their weighted ℓ1 distance from
the original datapoint as they are computed by greedily adding
constraints. For completeness, we show a full list of explanations as
they are generated. If the generated counterfactuals are to be offered
to consumers, this list should be truncated, as many of the later
elements are unwieldy. All explanations automatically generated
by our approach will be shown in the typewriter font, hypothetical
You got s c o r e ' good ' .
One way you cou ld have got s c o r e ' bad ' i n s t e a d i s i f :
E x t e r n a l R i s k E s t im a t e had taken va lue 63 r a t h e r than 74
Another way you cou ld have got s c o r e ' bad ' i n s t e a d i s i f :
MSinceMostRecentDelq had taken va lue 15 r a t h e r than −7.
You got s c o r e ' good ' .
One way you cou ld have got s c o r e ' bad ' i n s t e a d i s i f :
E x t e r n a l R i s k E s t im a t e had taken va lue 57 r a t h e r than 69
Another way you cou ld have got s c o r e ' bad ' i n s t e a d i s i f :
Ne t F r a c t i onRevo l v i ngBu rden had taken va lue 41 r a t h e r than 0
Another way you cou ld have got s c o r e ' bad ' i n s t e a d i s i f :
NumInqLast6M had taken va lue 4 r a t h e r than 2
Another way you cou ld have got s c o r e ' bad ' i n s t e a d i s i f :
NumSa t i s f a c t o ryT rade s had taken va lue 27 r a t h e r than 41
Another way you cou ld have got s c o r e ' bad ' i n s t e a d i s i f :
AverageMInF i l e had taken va lue 49 r a t h e r than 6 3 ;
NumInqLast6Mexcl7days had taken va lue 0 r a t h e r than 2
Another way you cou ld have got s c o r e ' bad ' i n s t e a d i s i f :
E x t e r n a l R i s k E s t im a t e had taken va lue −9 , r a t h e r than 69
Another way you cou ld have got s c o r e ' bad ' i n s t e a d i s i f :
NumSa t i s f a c t o ryT rade s had taken va lue −9 , r a t h e r than 41
Another way you cou ld have got s c o r e ' bad ' i n s t e a d i s i f :
P e r cen tTrade sNeve rDe lq had taken va lue −9 , r a t h e r than 95
You got s c o r e ' bad ' .
One way you cou ld have got s c o r e ' good ' i s i f :
E x t e r n a l R i s k E s t im a t e took va lue 72 r a t h e r than −9
You got s c o r e ' bad ' .
One way you cou ld have got s c o r e ' good ' i n s t e a d i s i f :
MSinceMostRecentDelq had taken va lue −7 , r a t h e r than 3 ;
MS inceMos tRecen t Inqexc l 7days had taken va lue 14 r a t h e r than 0
Another way you cou ld have got s c o r e ' good ' i n s t e a d i s i f :
E x t e r n a l R i s k E s t im a t e had taken va lue 66 r a t h e r than 6 1 ;
MS inceMos tRecen t Inqexc l 7days had taken va lue −8 , r a t h e r than 0
Another way you cou ld have got s c o r e ' good ' i n s t e a d i s i f :
NumSa t i s f a c t o ryT rade s had taken va lue 35 r a t h e r than 2 6 ;
NumInqLast6M had taken va lue 0 r a t h e r than 1 ;
Ne t F r a c t i onRevo l v i ngBu rden had taken va lue −9 r a t h e r than 57
Another way you cou ld have got s c o r e ' good ' i n s t e a d i s i f :
P e r c e n t I n s t a l l T r a d e s had taken va lue −9 , r a t h e r than 5 7 ;
Ne t F r a c t i onRevo l v i ngBu rden had taken va lue 0 r a t h e r than 57
Another way you cou ld have got s c o r e ' good ' i n s t e a d i s i f :
NumInqLast6Mexcl7days had taken va lue 6 r a t h e r than 1 ;
NumRevolvingTradesWBalance had taken va lue −9 , r a t h e r than 6
Another way you cou ld have got s c o r e ' good ' i n s t e a d i s i f :
AverageMInF i l e had taken va lue 238 r a t h e r than 86
Another way you cou ld have got s c o r e ' good ' i n s t e a d i s i f :
MaxDelqEver had taken va lue −9 , r a t h e r than 6 ;
P e r c e n t I n s t a l l T r a d e s had taken va lue 40 r a t h e r than 5 7 ;
NumInqLast6M had taken va lue −9 , r a t h e r than 1 ;
NumRevolvingTradesWBalance had taken va lue 0 r a t h e r than 6
Another way you cou ld have got s c o r e ' good ' i n s t e a d i s i f :
MSinceMostRecentDelq had taken va lue 83 r a t h e r than 3 ;
MaxDelqEver had taken va lue 5 r a t h e r than 6 ;
N e t F r a c t i o n I n s t a l l B u r d e n had taken va lue −9 , r a t h e r than 6 7 ;
NumBank2Nat lTradesWHighUt i l i za t ion had taken va lue −9 ,
r a t h e r than 2
Table 1: Two explanations for different pieces of data leading to a ‘good’ result on the FICO challenge (left, top) one of the few
short explanations for ‘bad’ (left, bottom) on and a typical explanations for a datapoint scored as ‘bad’ (right).
explanations and those generated by other methods will be given
in quote blocks.
We first turn our attention to the LSAT dataset.
5.1 LSAT
The LSAT dataset is a simple prediction task to estimate how well a
student is likely to do in their first year exams at law school based
upon their race, GPA, and law school entry exams. It is regularly
used in fairness community as the historic data has a strong racial
bias, with classifiers trained on this data typically predicting that
any black person will do worse than average, regardless of their
exam scores. As such, counterfactual explanations generated on
this dataset should provide evidence of racial bias, and provide im-
mediate grounds for system administrators to block the deployment
of the system, or for individuals suffering from from discrimination
to challenge the decision.
We train a logistic regression classifier to predict student’s first
year grade score and assume that a decision is being automatically
made to reject students predicted to do worse than average. This
mimics the setup of Wachter et al. (2018) although we do not use
a neural network to predict. Wachter et al. had difficulty with the
binary nature of the race variable ( value ‘1’ indicates that an indi-
vidual identified as black, and ‘0’ for all other skin colours) - and
frequently predicted nonsense values such as a skin colour of ‘-0.7’.
To get around this, they had to explicitly fix the race variable to
take labels ‘0’ and ‘1’ over two runs and then pick the solution
found that has the smallest weighted ℓ1 distance. In contrast, we
simply treat the variable as a mixed encoded variable that takes a
continuous value in the region of [0, 0] (i.e. only the value 0), and
with an additional discrete state of value 1. All other issues are
taken care of automatically, and we automatically generate diverse
counterfactuals.
Wachter et al. (2018) consider five individuals
Person 1 2 3 4 5
Race 0 0 1 1 0
LSAT 39.0 48.0 28.0 28.5 18.3
GPA 3.1 3.7 3.3 2.4 2.7
and reported the following explanations:
Person 1: If your LSAT was 34.0, you would have an
average predicted score (0).
Person 2: If your LSAT was 32.4, you would have an
average predicted score (0).
Person 3: If your LSAT was 33.5, and you were ‘white’,
you would have an average predicted score (0).
Person 4: If your LSAT was 35.8, and you were ‘white’,
you would have an average predicted score (0).
Person 5: If your LSAT was 34.9, you would have an
average predicted score (0).
The explanations found using our method are as follows:
You got s c o r e ' above average ' .
One way you cou ld have got s c o r e ' below average ' i s i f :
l s a t took va lue 3 3 . 9 r a t h e r than 3 9 . 0
−−−−−
Another way you cou ld have got s c o r e ' below average ' i s i f :
gpa had taken va lue 2 . 5 r a t h e r than 3 . 1
−−−−−−
Another way you cou ld have got s c o r e ' below average ' i s i f :
i s b l a c k had taken va lue 1 r a t h e r than 0
You got s c o r e ' above average ' .
One way you cou ld have got s c o r e ' below average ' i s i f :
l s a t took va lue 3 2 . 3 r a t h e r than 4 8 . 0
−−−−−−
Another way you cou ld have got s c o r e ' below average ' i s i f :
i s b l a c k took va lue 1 r a t h e r than 0 .
You got s c o r e ' below average ' .
One way you cou ld have got s c o r e ' above average ' i s i f :
l s a t took va lue 3 1 . 6 r a t h e r than 2 8 . 0 ;
i s b l a c k took va lue 0 r a t h e r than 1
You got s c o r e ' below average ' .
One way you cou ld have got s c o r e ' above average ' i s i f :
l s a t took va lue 3 8 . 8 r a t h e r than 2 8 . 5 ;
i s b l a c k took va lue 0 r a t h e r than 1
You got s c o r e ' below average ' .
One way you cou ld have got s c o r e ' above average ' i s i f :
l s a t took va lue 3 6 . 4 r a t h e r than 1 8 . 3
This is not a direct comparison with Wachter et al., as they made
use of a different classifier. There are noticeable differences in the
counterfactuals found starting with the small discrepancy between
the first explanation of person 1. Beyond this, several benefits of
our new approach are apparent.
With the previous approach, the inherent racial bias of the algo-
rithm was only detectable by computing counterfactuals for black
students, as the lack of representation in the dataset (6% of the
dataset identified as black) meant that counterfactuals that changed
race were heavily penalised. In fact, with a classifier with a slightly
weaker racial bias, it’s possible that Wachter et al., might never
observe the bias, as it would be always preferable to vary the LSAT
score rather than to alter race. This is not the case for our approach
where the diverse explanations offered makes the racial bias very
apparent.
Another factor also apparent is the absence of gratuitous diver-
sity. If, as in the last example, changing the LSAT score is both
sufficient to obtain a different outcome, and necessary, no addi-
tional explanations that jointly vary the LSAT score and GPA are
shown.
5.2 The FICO Explainability Challenge
We further demonstrate our approach set out in the previous section
on the FICO Explainability Challenge. This new challenge is based
upon an anonymized Home Equity Line of Credit (HELOC) Dataset
released by FICO a credit scoring company. The aim is to train a
classifier to predict whether a homeowner they will repay their
HELOC account within 2 years. Potentially, this prediction is then
used to decide whether the homeowner qualifies for a line of credit
and how much credit should be extended.
We do not compare against the previous baseline method of
Wachter et al, as this would require on the order of 411 ≈ 4 million
runs to compute all the counterfactuals over the valid binary states
using their brute force approach.
The target to predict is a binary variable FICO refer to as “Risk
Performance”. It takes value “Bad” indicating that a consumer was
90 days past due or worse at least once over a period of 24 months
from when the credit account was opened. The value “Good” indi-
cates that they made all payments without being 90 days overdue.
The raw data has a total of 23 components excluding “Risk Per-
formance” and after performing the mixed encoding this rises to
56.
Although the only task given in the FICO challenge “One of the
tasks is how well data scientists can use the explanation and their
best judgements to make predictions of the selected test instances.”3
does not require good explanations – it could potentially be solved
by an uninterpretable algorithm that simply makes high accuracy
predictions – the dataset in itself is still useful. In particular is
possible to consider how helpful counterfactual explanations would
be to an applicant who has been denied or offered a loan with
respect to the three uses of explanation of Wachter et al., listed in
the introduction. Namely if: (i) the explanations we offer would
help a data-subject understand why a particular loan decision has
been reached; (ii) to provide grounds to contest a decision if the
outcome is undesired or (iii) to understand what if anything could
be changed to receive a desired outcome.
Although (i) is perhaps best evaluated with user studies as in
Binns et al. (2018); for (ii) there are two possible ways as to how
these counterfactual explanations could be used to contest a deci-
sion. If part of an explanations says:
One way you could have got score ’good’ is if: the
number of months since recent delinquency was -9
rather than 15
and you know that you have not missed a payment in the last 16
months, this gives immediate grounds to contest. Another impor-
tant example is shown in table 1, bottom left:
One way you cou ld have got s c o r e ' good ' i s i f :
E x t e r n a l R i s k E s t im a t e took va lue 72 r a t h e r than −9.
Importantly, this explanation shows that the only thing wrong with
the application is that the external risk estimate is missing (value ‘-9’
corresponds to ‘No bureau record’). This provides the data-subject
with exactly the information they need to correct their score.
Counterfactuals also provide additional grounds to contest; In
the problem specification, FICO also require that the classification
response with respect certain variables is monotonic; for example
that themore recently you havemissed a payment the less likely you
are to receive a ‘good’ decision. If on the other hand, an explanation
says
One way you could have got score ’good’ is if: the
number of months since recent delinquency was 7
rather than 15
this provides direct evidence that the model violates these sensible
constraints, and gives grounds to contest. Finally, regarding (iii),
explanations that say that the “Net Fractional Revolving Burden” is
too high or that “Months since Most Recent Delinquency” is too
low provide a direct pathway to getting a favourable decision in
the future, even if that pathway is simply waiting till you become
eligible in the future.
To evaluate on this dataset, we train a logistic regressor on the
mixed data using the dummy variable encoding described in section
3At the time of writing only one task has been released.
You got s c o r e ' bad ' .
One way you cou ld have got s c o r e ' good ' i n s t e a d i s i f :
MSinceMostRecentDelq had taken va lue −7 r a t h e r than 1 ;
MS inceMos tRecen t Inqexc l 7days had taken va lue 24 r a t h e r than 0
You got s c o r e ' bad ' .
One way you cou ld have got s c o r e ' good ' i n s t e a d i s i f :
MSinceMostRecentDelq had taken va lue −7 r a t h e r than 9 ;
MS inceMos tRecen t Inqexc l 7days had taken va lue 20 r a t h e r than 0 ;
Ne t F r a c t i onRevo l v i ngBu rden had taken va lue −9 r a t h e r than 89
Another way you cou ld have got s c o r e ' good ' i n s t e a d i s i f :
E x t e r n a l R i s k E s t im a t e had taken va lue 78 r a t h e r than 5 9 ;
MS inceMos tRecen t Inqexc l 7days had taken va lue −8 r a t h e r than 0
Another way you cou ld have got s c o r e ' good ' i n s t e a d i s i f :
E x t e r n a l R i s k E s t im a t e had taken va lue 67 r a t h e r than 5 4 ;
MS inceMos tRecen t Inqexc l 7days had taken va lue −8 r a t h e r than 0 ;
NumInqLast6M had taken va lue −9 r a t h e r than 4
Another way you cou ld have got s c o r e ' good ' i n s t e a d i s i f :
NumSa t i s f a c t o ryT rade s had taken va lue 33 r a t h e r than 3 1 ;
Ne t F r a c t i onRevo l v i ngBu rden had taken va lue −9 r a t h e r than 6 2 ;
NumRevolvingTradesWBalance had taken va lue −9 r a t h e r than 12
Another way you cou ld have got s c o r e ' good ' i n s t e a d i s i f :
NumSa t i s f a c t o ryT rade s had taken va lue 48 r a t h e r than 2 5 ;
NumInqLast6M had taken va lue 0 r a t h e r than 4 ;
Ne t F r a c t i onRevo l v i ngBu rden had taken va lue 0 r a t h e r than 89
Another way you cou ld have got s c o r e ' good ' i n s t e a d i s i f :
P e r c e n t I n s t a l l T r a d e s had taken va lue −9 r a t h e r than 4 7 ;
NumInqLast6Mexcl7days had taken va lue 4 r a t h e r than 0 ;
Ne t F r a c t i onRevo l v i ngBu rden had taken va lue 0 r a t h e r than 62
Another way you cou ld have got s c o r e ' good ' i n s t e a d i s i f :
P e r c e n t I n s t a l l T r a d e s had taken va lue −9 r a t h e r than 5 8 ;
NumInqLast6Mexcl7days had taken va lue 13 r a t h e r than 4 ;
NumRevolvingTradesWBalance had taken va lue −9 r a t h e r than 7
Another way you cou ld have got s c o r e ' good ' i n s t e a d i s i f :
AverageMInF i l e had taken va lue 298 r a t h e r than 78
Another way you cou ld have got s c o r e ' good ' i n s t e a d i s i f :
AverageMInF i l e had taken va lue 352 r a t h e r than 37
Another way you cou ld have got s c o r e ' good ' i n s t e a d i s i f :
MaxDelqEver had taken va lue −9 r a t h e r than 6 ;
P e r c e n t I n s t a l l T r a d e s had taken va lue 23 r a t h e r than 4 7 ;
NumRevolvingTradesWBalance had taken va lue 0 r a t h e r than 1 2 ;
NumBank2Nat lTradesWHighUt i l i za t ion had taken va lue −9 r a t h e r than 3
Another way you cou ld have got s c o r e ' good ' i n s t e a d i s i f :
MSinceMostRecentDelq had taken va lue 52 r a t h e r than 9 ;
MaxDelqEver had taken va lue −9 r a t h e r than 6 ;
P e r c e n t I n s t a l l T r a d e s had taken va lue 0 r a t h e r than 5 8 ;
Ne t F r a c t i onRevo l v i ngBu rden had taken va lue −8 r a t h e r than 8 9 ;
NumRevolvingTradesWBalance had taken va lue 0 r a t h e r than 7 ;
NumBank2Nat lTradesWHighUt i l i za t ion had taken va lue −9 r a t h e r than 2
Another way you cou ld have got s c o r e ' good ' i n s t e a d i s i f :
MSinceMostRecentDelq had taken va lue 83 r a t h e r than 1 ;
N e t F r a c t i o n I n s t a l l B u r d e n had taken va lue −9 r a t h e r than 9 3 ;
NumRevolvingTradesWBalance had taken va lue −8 r a t h e r than 1 2 ;
NumBank2Nat lTradesWHighUt i l i za t ion had taken va lue 2 r a t h e r than 3
Another way you cou ld have got s c o r e ' good ' i n s t e a d i s i f :
MSinceMostRecentTradeOpen had taken va lue −9 r a t h e r than 7 ;
MaxDelq2Publ icRecLast12M had taken va lue 9 r a t h e r than 4 ;
MaxDelqEver had taken va lue 0 r a t h e r than 6 ;
NumTradesOpeninLast12M had taken va lue −9 r a t h e r than 3 ;
MS inceMos tRecen t Inqexc l 7days had taken va lue −9 r a t h e r than 0 ;
N e t F r a c t i o n I n s t a l l B u r d e n had taken va lue −9 r a t h e r than 7 6 ;
NumRevolvingTradesWBalance had taken va lue −8 r a t h e r than 7 ;
NumBank2Nat lTradesWHighUt i l i za t ion had taken va lue 0 r a t h e r than 2 ;
PercentTradesWBalance had taken va lue −8 r a t h e r than 100
Another way you cou ld have got s c o r e ' good ' i n s t e a d i s i f :
MSinceMostRecentTradeOpen had taken va lue −9 r a t h e r than 1 1 ;
MaxDelq2Publ icRecLast12M had taken va lue 8 r a t h e r than 4 ;
MaxDelqEver had taken va lue 0 r a t h e r than 6 ;
NumTradesOpeninLast12M had taken va lue −9 r a t h e r than 1 ;
Ne t F r a c t i onRevo l v i ngBu rden had taken va lue −8 r a t h e r than 6 2 ;
PercentTradesWBalance had taken va lue −8 r a t h e r than 94
Another way you cou ld have got s c o r e ' good ' i n s t e a d i s i f :
MSinceOldestTradeOpen had taken va lue 803 r a t h e r than 8 8 ;
MSinceMostRecentTradeOpen had taken va lue 0 r a t h e r than 7 ;
NumTrades60Ever2DerogPubRec had taken va lue −9 r a t h e r than 0 ;
NumTrades90Ever2DerogPubRec had taken va lue −9 r a t h e r than 0 ;
Pe r cen tTrade sNeve rDe lq had taken va lue 100 r a t h e r than 9 2 ;
MSinceMostRecentDelq had taken va lue −9 r a t h e r than 9 ;
NumTotalTrades had taken va lue −9 r a t h e r than 2 6 ;
NumTradesOpeninLast12M had taken va lue 0 r a t h e r than 3 ;
N e t F r a c t i o n I n s t a l l B u r d e n had taken va lue 0 r a t h e r than 7 6 ;
NumRevolvingTradesWBalance had taken va lue −8 r a t h e r than 7 ;
NumIns ta l lTradesWBalance had taken va lue 8 r a t h e r than 7 ;
NumBank2Nat lTradesWHighUt i l i za t ion had taken va lue 0 r a t h e r than 2 ;
PercentTradesWBalance had taken va lue −8 r a t h e r than 100
Another way you cou ld have got s c o r e ' good ' i n s t e a d i s i f :
MSinceOldestTradeOpen had taken va lue −9 r a t h e r than 1 3 7 ;
MSinceMostRecentTradeOpen had taken va lue 0 r a t h e r than 1 1 ;
MSinceMostRecentDelq had taken va lue −8 r a t h e r than 1 ;
NumTotalTrades had taken va lue −9 r a t h e r than 3 2 ;
NumTradesOpeninLast12M had taken va lue 0 r a t h e r than 1 ;
MS inceMos tRecen t Inqexc l 7days had taken va lue −9 r a t h e r than 0 ;
NumInqLast6M had taken va lue −9 r a t h e r than 0 ;
NumInqLast6Mexcl7days had taken va lue −9 r a t h e r than 0 ;
N e t F r a c t i o n I n s t a l l B u r d e n had taken va lue 0 r a t h e r than 9 3 ;
NumIns ta l lTradesWBalance had taken va lue 15 r a t h e r than 4 ;
PercentTradesWBalance had taken va lue −8 r a t h e r than 94
Table 2: Paired explanations generated on the FICO dataset. Results show two full sets of explanations for similar individuals.
Later explanations are given for completeness only and are not suitable to be directly offered to a data-subject.
3. Example decisions can be seen in tables 1 and 2. The explanations
are generated fully automatically using the method in the previous
section, with variable names extracted from the provided data, and
the meanings of special values provided by the dataset creators.
None of the previously mentioned monotonic constraints were
violated by the learnt algorithm.
As can be seen in the tables, the individual explanations gener-
ated at the start of the process are short, human readable, and do
not require the data subject to understand either the internal com-
plexity of the classifier and the variable encoding. However, taken
in their entirety, a complete set of explanations, such as shown in
table 1 right, or table 2 can potentially be overwhelming, and more
thought is needed as to how to interactively present and navigate
them.
Shown in table 2, is the complete set of explanations gener-
ated for two highly similar individuals. Several factors are worth
remarking on: First, the stability of the generation of multiple coun-
terfactuals is noteworthy. Although there are small differences both
in the values proposed and occasionally in the variables selected,
on the whole the generated sets of explanations are very similar to
one another, and provide similar data subjects, with very similar
amounts of information. This consistent treatment is important
for providing a sense of stability and coherence when offering re-
peated explanations to a data subject who’s data slowly changes
with time. Second, the results of the weighted ℓ1 norm noticeably
differs from simple sparsity constraints, with the numbers of factors
selected fluctuating up and down as we proceed through the list of
explanations that are ordered by their ℓ1 distance from the original
datapoint. Further work with data subjects is needed to determine
which of these explanations are most comprehensible, and which
are most useful for determining future action.
Finally, it is worth remarking that the diverse counterfactuals
become both less diverse and less comprehensible towards the end
of the procedure. If a group of large changes are sufficient to “push”
a counterfactual almost to the decision boundary, it is possible
for these variables to remain turned on as a necessary condition
for any subsequent counterfactuals, while incidental variables that
make little contribution to the decision are toggled on and off.
Although one easy answer is to simply stop earlier, more diverse
counterfactuals could also be generated by using a less greedy
approach.
Taken as a whole, the generated counterfactuals provide insight
into the general behaviour of the classifier. One unexpected be-
haviour, is that while a single missed payment is enough to move
many people from a ‘good’ credit prediction to ‘bad’4, it is not
irredeemable and a strong credit record in other areas can compen-
sate for this. In such situations, diverse counterfactual explanations
could be invaluable as providing direct pathways to obtaining a
good credit rating. Although using counterfactuals in this way
raises the spectre of people “gaming the system”, and intentionally
distorting their credit records to obtain a better score; perhaps the
most pragmatic response to this is to build more accurate systems
so that as individuals make changes to improve their credit score,
their underlying risk of default also decreases.
4As can be seen in the counterfactual explanations offered to ‘good’ decisions.
Figure 1: A visualisation of the weights learnt by logistic re-
gression on the FICO dataset. Weights are ordered by their
median contribution to the score of each datapoint over the
entire dataset, with a positive sign indicating that they drive
the classifier towards a score of “good”.
By way of contrast a direct visualisation of the learnt linear
weights is shown in figure 1, and the reader is invited to see what
conclusions they can draw from them.One of the most counter-
intuitive factors of the weights when presented like this is that a
positive weight is associated with External-risk factor taking value
-9. However, as discussed an external-risk estimate of -9 may be the
only counterfactual explanation offered for why someone gets a bad
credit score. This is due to the much larger positive contribution of
a typical external-risk estimate.
6 CONCLUSION
This is the first work to show how coherent counterfactual expla-
nations can be generated for the mixed datasets commonly used
in the real world, and the first to propose a concrete method for
generating diverse counterfactuals. As such the methods proposed
in this paper provide an significant step forward in what can be
done with counterfactual explanations. Generalising the approach
to non-linear functions, and indeed to non-differentiable classifiers
such as k-nearest neighbour or random forests, looks to be a useful
direction for future work. However, linear functions represent part
of machine learning that “just works” and are consistently used by
industry and data scientists in a wide range of scenarios. Reliable
methods such as those discussed for generating both coherent and
diverse explanations are needed if we want people to make use of
them.
Collaboration between policy and technology is a two-way street.
Just as policy must respect the limitations of technology in what
it calls for, it is important to build the supporting technology in
response to policy proposals. Compelling ideas such as counterfac-
tual explanations are of little use unless we develop the technology
to make them work. This paper has addressed major technological
issues in one of the most substantial use cases for counterfactual
explanations namely linear models for mixed financial data. As
mentioned in section 5.2, the brute force enumeration of previous
approaches do not scale to these datasets. Our work represents
progress towards making methods for counterfactual explanation
that “just work ” out of the box. Full source code can be found at
https://bitbucket.org/ChrisRussell/diverse-coherent-explanations/.

REFERENCES
[1] Reuben Binns, Max Van Kleek, Michael Veale, Ulrik Lyngs, Jun
Zhao, and Nigel Shadbolt. 2018. "It’s Reducing a Human Being
to a Percentage": Perceptions of Justice in Algorithmic Decisions.
In Proceedings of the 2018 CHI Conference on Human Factors in
Computing Systems. ACM, 377.
[2] B.G. Buchanan and E.H. Shortliffe. 1984. Rule Based Expert Systems:
The MYCIN Experiments of the Stanford Heuristic Programming
Project. Addison-Wesley, Chapter 18.
[3] R. Caruana, H. Kangarloo, J. D. Dionisio, U. Sinha, and D. Johnson.
1999. Case-based explanation of non-case-based learning meth-
ods. Proceedings of the AMIA Symposium (1999), 212–215. PMID:
10566351 PMCID: PMC2232607.
[4] Mark Craven and Jude W. Shavlik. 1996. Extracting tree-structured
representations of trained networks. Advances in neural infor-
mation processing systems, 24–30. http://papers.nips.cc/paper/
1152-extracting-tree-structured-representations-of-trained-networks.
pdf [Online; accessed 2017-10-16].
[5] Finale Doshi-Velez, Mason Kortz, Ryan Budish, Chris Bavitz, Sam
Gershman, David O’Brien, Stuart Schieber, James Waldo, David
Weinberger, and Alexandra Wood. 2017. Accountability of
AI under the law: The role of explanation. arXiv preprint
arXiv:1711.01134 (2017).
[6] LLC Gurobi Optimization. 2018. Gurobi Optimizer Reference Man-
ual. http://www.gurobi.com
[7] Been Kim, Cynthia Rudin, and Julie A. Shah. 2014. The bayesian
case model: A generative approach for case-based reasoning
and prototype classification. Advances in Neural Information
Processing Systems, 1952–1960.
[8] Boris Kment. 2006. Counterfactuals and explanation. Mind 115,
458 (2006), 261–310.
[9] David Lewis. 1973. Counterfactuals. Blackwell, Oxford.
[10] Brian Y Lim and Anind K Dey. 2009. Assessing demand for intelli-
gibility in context-aware applications. In Proceedings of the 11th
international conference on Ubiquitous computing. ACM, 195–204.
[11] Zachary C. Lipton. 2016. The Mythos of Model Interpretability.
arXiv:1606.03490 [cs, stat] (10 6 2016). http://arxiv.org/abs/1606.
03490 arXiv: 1606.03490.
[12] Scott Lundberg and Su-In Lee. 2017. A Unified Approach to Inter-
preting Model Predictions. arXiv:1705.07874 [cs, stat] (22 5 2017).
http://arxiv.org/abs/1705.07874 arXiv: 1705.07874.
[13] David Martens, Bart Baesens, Tony Van Gestel, and Jan Vanthienen.
2007. Comprehensible credit scoringmodels using rule extraction
from support vector machines. European journal of operational
research 183, 3 (2007), 1466–1476.
[14] David Martens and Foster Provost. 2013. Explaining data-driven
document classifications. (2013). https://papers.ssrn.com/sol3/
papers.cfm?abstract_id=2282998 [Online; accessed 2017-09-22].
[15] Tim Miller. 2017. Explanation in artificial intelligence: Insights
from the social sciences. arXiv preprint arXiv:1706.07269 (2017).
[16] Brent Mittelstadt, Chris Russell, and Sandra Wachter. 2019. Explain-
ing Explanations in AI. ACM Conference on Fairness Accountabil-
ity and Transparency (2019).
[17] Gregoire Montavon, Wojciech Samek, and Klaus-Robert M uller.
2017. Methods for interpreting and understanding deep neural
networks. Digital Signal Processing (2017).
[18] Judea Pearl. 2000. Causation. Cambridge University Press, Cam-
bridge.
[19] Marco Tulio Ribeiro, Sameer Singh, and Carlos Guestrin. 2016. Why
should i trust you?: Explaining the predictions of any classifier.
In Proceedings of the 22nd ACM SIGKDD International Conference
on Knowledge Discovery and Data Mining. ACM, 1135–1144.
[20] Howard Rosenbrock. 1960. An automatic method for finding the
greatest or least value of a function. Comput. J. 3, 3 (1960), 175–
184.
[21] David-Hillel Ruben. 2004. Explaining explanation. Routledge.
[22] Ivan Sanchez, Tim Rocktaschel, Sebastian Riedel, and Sameer Singh.
2015. Towards extracting faithful and descriptive representations
of latent variable models. AAAI Spring Syposium on Knowledge
Representation and Reasoning (KRR): Integrating Symbolic and
Neural Approaches (2015). http://www.aaai.org/ocs/index.php/
SSS/SSS15/paper/viewFile/10304/10033 [Online; accessed 2017-
10-16].
[23] Avanti Shrikumar, Peyton Greenside, and Anna Shcherbina. 2016. 
Not just a black box: Learning important features through prop-
agating activation differences. CoRR.
[24] Berk Ustun, Alexander Spangher, and Yang Liu. 2019. Actionable
Recourse in Linear Classification. ACM Conference on Fairness
Accountability and Transparency (2019).
[25] SandraWachter, Brent Mittelstadt, and Chris Russell. 2018. Counter-
factual Explanations without Opening the Black Box: Automated
Decisions and the GDPR. Harvard Journal of Law & Technology
forthcoming (2018).
[26] Stephen Wright and Jorge Nocedal. 1999. Numerical optimization.
Springer Science 35, 67-68 (1999), 7.
